import json
import os
from datetime import datetime
import uuid


def emulate_malware_behavior(attack_name="Malware Emulation"):
    now = datetime.now().isoformat()
    guid = str(uuid.uuid4())

    event = {
        "attack": attack_name,
        "technique": "T1055.001",
        "timestamp": now,  # ‚¨ÖÔ∏è –ö–ª—é—á–æ–≤–æ: —Ç–æ–≤–∞ –µ, –∫–æ–µ—Ç–æ timeline –æ—á–∞–∫–≤–∞
        "event_id": guid,
        "sysmon": {
            "event_id": 1,
            "record_id": 2345,
            "time_generated": now,
            "process_guid": guid,
            "parent_process": "explorer.exe",
            "new_process": "ransomware.exe",
            "command_line": "cipher.exe /w:C:\\",
            "integrity_level": "High",
            "detected": False,
            "detection_note": "Possible ransomware behavior - cipher.exe wipe"
        },
        "registry": {
            "path": r"HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run",
            "value_name": "EvilStartup",
            "value": "C:\\Users\\User\\AppData\\evil.exe",
            "action": "SetValue"
        },
        "filesystem": {
            "created_file": r"C:\Users\User\AppData\Local\Temp\tmp1234.tmp",
            "action": "create"
        },
        "mutex": {
            "name": "Global\\MalwareMutex",
            "action": "CreateMutex"
        },
        "network": {
            "protocol": "HTTP",
            "dest_ip": "192.168.100.88",
            "dest_port": 443,
            "uri": "/beacon"
        }
    }

    # –û–±–æ–≥–∞—Ç—è–≤–∞–Ω–µ –Ω–∞ detection_note
    event["sysmon"]["detection_note"] += " | Suspicious registry persistence attempt"
    event["sysmon"]["detection_note"] += " | Temp file created"
    event["sysmon"]["detection_note"] += " | Suspicious mutex created"
    event["sysmon"]["detection_note"] += " | Beacon to C2 domain"

    # –û–ø—Ü–∏–æ–Ω–∞–ª–Ω–æ: –∑–∞–ø–∏—Å –≤ log —Ñ–∞–π–ª
    os.makedirs("logs", exist_ok=True)
    with open("logs/malware_emulation.json", "w") as f:
        json.dump(event, f, indent=4)

    print("[+] Malware emulation log generated: logs/malware_emulation.json")
    return event  # üëà —Ç–æ–≤–∞ –ø–æ–∑–≤–æ–ª—è–≤–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤ Streamlit
